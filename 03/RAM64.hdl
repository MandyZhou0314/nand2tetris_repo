// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];
    //0-2 -> find the register in specific ram8
    //3-6 -> find the ram8
    //address[3..6] -> mux and dmux
    //address[0..2] -> specific ram8

    PARTS:
    //// Replace this comment with your code.
    DMux8Way(in= load, sel= address[3..5], a= ram1, b= ram2, c= ram3, d= ram4, e= ram5, f= ram6, g= ram7, h= ram8);
    RAM8(in= in, load= ram1, address= address[0..2], out= ram81);
    RAM8(in= in, load= ram2, address= address[0..2], out= ram82);
    RAM8(in= in, load= ram3, address= address[0..2], out= ram83);
    RAM8(in= in, load= ram4, address= address[0..2], out= ram84);
    RAM8(in= in, load= ram5, address= address[0..2], out= ram85);
    RAM8(in= in, load= ram6, address= address[0..2], out= ram86);
    RAM8(in= in, load= ram7, address= address[0..2], out= ram87);
    RAM8(in= in, load= ram8, address= address[0..2], out= ram88);
    Mux8Way16(a= ram81, b= ram82, c= ram83, d= ram84, e= ram85, f= ram86, g= ram87, h= ram88, sel= address[3..5], out= out);
}